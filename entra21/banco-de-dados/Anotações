ligações   (1,1) recebe ou tem varias coisas
(0,n) recebe ou não envia nada (Ou os dois)



SELECT
FROM
WHERE   
INNER JOIN
ON
GROUP BY
HAVING
ORDER BY
LIMIT



m.nome,
sum(p.valor) total_valor
FROM
marcas m
INNER JOIN
produtos p
ON
p.id_marca = m.id
WHERE p.nome = 'Apple'
GROUP BY m.nome
HAVING sum(p.valor) > 3000
ORDER BY m.nome;

SELECT
m.nome,
p.nome,
max(p.valor)
FROM
marcas m
INNER JOIN
produtos p
ON
m.id = p.id_marca
GROUP BY p.nome, m.nome
ORDER BY p.nome DESC
LIMIT 1;

CREATE TABLE IF NOT EXISTS vendas (
id_nf integer,
id_item integer,
cod_prod integer NOT NULL,
valor_unit numeric NOT NULL,
quantidade integer NOT NULL,
desconto numeric,
PRIMARY KEY (id_nf, id_item)
);

INSERT INTO
vendas
VALUES
(1, 1, 1, 25.00, 10, 5),
(1, 2, 2, 13.00, 3, null),
(1, 3, 3, 15.00, 2, null),
(1, 4, 4, 10.00, 1, null),
(1, 5, 5, 30.00, 1, null),
(2, 1, 3, 15.00, 4, null),
(2, 2, 4, 10.00, 5, null),
(2, 3, 5, 30.00, 7, null),
(3, 1, 1, 25.00, 5, null),
(3, 2, 4, 10.00, 4, null),
(3, 3, 5, 30.00, 5, null),
(3, 4, 2, 13.50, 7, null),
(4, 1, 5, 30.00, 10, 15),
(4, 2, 4, 10.00, 12, 5),
(4, 3, 1, 25.00, 13, 5),
(4, 4, 2, 13.00, 15, 5),
(5, 1, 3, 15.00, 3, null),
(5, 2, 5, 30.00, 6, null),
(6, 1, 1, 25.00, 22, 15),
(6, 2, 3, 15.00, 25, 20),
(7, 1, 1, 25.00, 10, 3),
(7, 2, 2, 13.50, 10, 4),
(7, 3, 3, 15.00, 10, 4),
(7, 4, 5, 30.00, 10, 1);


///////////////////////////////////////////////////////////////////

DROP TABLE IF EXISTS departamentos CASCADE;
DROP TABLE IF EXISTS funcionarios;

CREATE TABLE IF NOT EXISTS departamentos (
id SERIAL PRIMARY KEY,
nome text NOT NULL,
localizacao text NOT NULL
);

CREATE TABLE IF NOT EXISTS funcionarios (
id SERIAL PRIMARY KEY,
nome text NOT NULL,
sobrenome text NOT NULL,
data_nascimento date NOT NULL,
cpf text NOT NULL UNIQUE,
rg text NOT NULL UNIQUE,
logradouro text NOT NULL,
cep text NOT NULL,
cidade text NOT NULL,
telefone text NOT NULL,
funcao text NOT NULL,
salario numeric NOT NULL,
id_departamento integer REFERENCES departamentos
);

-- Adicionando o relacionamento na tabela de funcionários
ALTER TABLE
departamentos
ADD COLUMN
id_gerente integer NOT NULL REFERENCES funcionarios;

-- Criando gerentes
INSERT INTO
funcionarios (
nome,
sobrenome,
data_nascimento,
cpf,
rg,
logradouro,
cep,
cidade,
telefone,
funcao,
salario
)
VALUES
('Pedro', 'Silva', '1990-02-11', '111.111.111-11', '1.231.231', 'Rua 1', '12343-123', 'Timbó', '(47) 9 8282-8282', 'Gerente', 10000),
('José', 'Silva', '1992-03-01', '111.111.231-11', '1.111.231', 'Rua 1', '12233-123', 'Indaial', '(47) 9 8282-3282', 'Gerente', 20000);

-- Criando departamentos
INSERT INTO
departamentos (nome, localizacao, id_gerente)
VALUES
('RH', 'Filial de Blumenau', 1),
('TI', 'Filial de Indaial', 2);
-- Atualizando os departamentos dos gerentes
UPDATE funcionarios SET id_departamento = 1 WHERE id = 1;
UPDATE funcionarios SET id_departamento = 2 WHERE id = 2;

-- Inserindo funcionários
INSERT INTO
funcionarios (nome, sobrenome, data_nascimento, cpf, rg, logradouro, cep, cidade, telefone, funcao, salario, id_departamento)
VALUES
('Maria', 'Silva', '2000-02-11', '112.111.111-11', '1.231.777', 'Rua 1', '12343-123', 'Timbó', '(47) 9 8212-8282', 'Estagiário', 1400, 2),
('Mateus', 'Silva', '1995-02-11', '113.111.111-11', '1.232.888', 'Rua 1', '12343-101', 'Timbó', '(47) 9 8242-0282', 'Desenvolvedor Júnior', 2500, 2),
('João', 'Silva', '1995-02-11', '114.111.111-11', '1.112.231', 'Rua 1', '12343-113', 'Timbó', '(47) 9 8292-8282', 'Desenvolvedor Pleno', 2500, 2),
('Judas', 'Silva', '1995-02-11', '115.111.111-11', '1.555.231', 'Rua 1', '12343-142', 'Timbó', '(47) 9 8102-8282', 'Estagiário', 1000, 1)